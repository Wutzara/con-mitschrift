\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kd}{class} \PYG{n+nc}{Optimistic} \PYG{o}{\PYGZob{}} \PYG{c+c1}{// Generic code sketch}
    \PYG{k+kd}{private} \PYG{n}{State} \PYG{n}{state}\PYG{o}{;}

    \PYG{k+kd}{private} \PYG{k+kd}{synchronized} \PYG{n}{State} \PYG{n+nf}{getState}\PYG{o}{()} \PYG{o}{\PYGZob{}}
        \PYG{k}{return} \PYG{n}{state}\PYG{o}{;}
    \PYG{o}{\PYGZcb{}}

    \PYG{k+kd}{private} \PYG{k+kd}{synchronized} \PYG{k+kt}{boolean} \PYG{n+nf}{commit}\PYG{o}{(}\PYG{n}{State} \PYG{n}{assumed}\PYG{o}{,} \PYG{n}{State} \PYG{n}{next}\PYG{o}{)} \PYG{o}{\PYGZob{}}
        \PYG{k}{if} \PYG{o}{(}\PYG{n}{state} \PYG{o}{==} \PYG{n}{assumed}\PYG{o}{)} \PYG{o}{\PYGZob{}}
            \PYG{n}{state} \PYG{o}{=} \PYG{n}{next}\PYG{o}{;}
            \PYG{k}{return} \PYG{k+kc}{true}\PYG{o}{;}
        \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{o}{\PYGZob{}}
            \PYG{k}{return} \PYG{k+kc}{false}\PYG{o}{;}
        \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
